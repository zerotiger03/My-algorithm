# 거스름돈을 주어야 할 때 가장 적은 수로 주는 방법은 무엇일까? (동전은 500원, 100원, 50원, 10원이 있음)

# greedy의 시간 복잡도

# 최대로 오래 걸리면 총 4번 돈다.
# 즉, 상수시간이다.

def greedy(n):                               # 그리디 알고리즘
  lst = [0 for _ in range(4)]
  while n != 0:                              # 종료조건 : n == 0
    if n >= 500:                             # 각각 500, 100, 50, 10 으로 나눈 몫을 리스트에 바꿔주고 전체 n에서 그만큼 빼준다
      lst[0] = (n//500)
      n = n - (500 * (n//500))
    elif n >= 100:
      lst[1] = (n//100)
      n = n - (100 * (n//100))
    elif n >= 50:
      lst[2] = (n//50)
      n = n - (50 * (n//50))
    elif n >= 10:
      lst[3] = (n//10)
      n = n - (10 * (n//10))                # 종료조건까지 하고 나면 n은 0이므로 동전으로 n을 다 표현 한다 (500부터 시작하므로 최적임)
  return print(*lst)                        # 리턴한 값은 순서대로 500 100 50 10 원의 개수이다

greedy(760) # return 1 2 1 1
